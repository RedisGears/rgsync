[tox]
minversion=3.2.4
envlist=mysql, postgres, mongo, db2

# for variable reuse
[main]
dbuser = admin
dbpasswd = adminpass
db = rgsync

[docker:db2]
image = ibmcom/db2
container_name = db2
privileged = true
ports = 
    50000:50000/tcp
    55000:55000/tcp
environment =
    LICENSE=accept
    DB2INSTANCE={[main]dbuser}
    DB2INST1_PASSWORD={[main]dbpasswd}
    DBNAME={[main]db}

[docker:mysql]
image = mysql:8
healthcheck_cmd = sleep 10
ports =
    3306:3306/tcp
environment =
    MYSQL_ROOT_PASSWORD=adminadmin
    MYSQL_USER={[main]dbuser}
    MYSQL_PASSWORD={[main]dbpasswd}
    MYSQL_DATABASE={[main]db}

# tests, setup, and an init script for mongo use these variables
# if you edit this, edit tests/init-mongo.js as well
[docker:mongo]
name = mongo
image = mongo:4
ports =
    27017:27017/tcp
environment =
    MONGO_INITDB_ROOT_USERNAME={[main]dbuser}
    MONGO_INITDB_ROOT_PASSWORD={[main]dbpasswd}
    MONGO_INITDB_DATABASE=admin
    MONGO_DB={[main]db}
volumes =
    bind:ro:{toxinidir}/tests/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js

[docker:redisgears]
name = redisgears
image = redislabs/redismod:edge
volumes =
    bind:rw:{toxinidir}:/build
ports =
    6379:6379/tcp

[docker:postgres]
image = postgres:13
healthcheck_cmd = sleep 15
ports =
    5432:5432/tcp
environment =
    POSTGRES_USER={[main]dbuser}
    POSTGRES_PASSWORD={[main]dbpasswd}
    POSTGRES_DB={[main]db}

[flake8]
max-complexity = 10
filename = ./rgsync/**
ignore = W292, E501
exclude = src/conftest.py
show-source = true

[testenv]
allowlist_externals =
    rm
    poetry
docker =
    {envname}
    redisgears
setenv =
    IN_DOCKER = 1
commands_pre =
    rm -rf dist
    poetry build
commands =
    pytest -m {envname} -s

[testenv:postgres]

[testenv:mysql]

[testenv:mongo]

[testenv:db2]
commands = 
    docker exec redisgears apt-get update --fix-missing
    docker exec redisgears apt-get install -y gcc vim procps libxml2
    pytest -m {envname} -s

[testenv:sqlite]
allowlist_externals =
    rm
    poetry
docker =
    redisgears
setenv =
    IN_DOCKER = 1
commands_pre =
    rm -rf dist
    poetry build
commands =
    apt update -y
    apt install -y sqlite3
