[tox]
skipsdist = True

[flake8]
max-complexity = 10
ignore = E127,E265,E266,E301,E501
srcdir = redisbloom
show-source = true
exclude =.git,.tox,dist,doc,*/__pycache__/*,*test*.py

[docker:mysql]
image = mysql:5
ports = 3306:3306/tcp
environment =
    MYSQL_ROOT_PASSWORD=password
volumes =
    bind:ro:{toxinidir}:/build

[docker:redis-mysql]
image = redislabs/redisgears:edge
ports = 6379:6379/tcp
links =
    mysql:localhost
volumes =
    bind:rw:{toxinidir}:/build

[docker:redis-postgres]
image = redislabs/redisgears:edge
ports = 6379:6379/tcp
links =
    postgres:localhost
volumes =
    bind:rw:{toxinidir}:/build

[docker:postgres]
image = postgres:13
ports = 5432:5432/tcp
environment =
    POSTGRES_PASSWORD=Password123!
    POSTGRES_USER=demo
    POSTGRES_DB=demo
volumes =
    bind:ro:{toxinidir}:/build

[testtemplate]
python = /var/opt/redislabs/modules/rg/python3/bin/python3

[testenv:mysql]
allowlist_externals =
    docker
docker =
    mysql
    redis-mysql
commands_pre =
    # configure redis
    docker exec -it redis-mysql {[testtemplate]python} -m pip install poetry
    docker exec -it redis-mysql {[testtemplate]python} -m poetry config virtualenvs.create false
    docker exec -w /build -it redis-mysql {[testtemplate]python} -m poetry build
    docker exec -w /build -it redis-mysql {[testtemplate]python} -m poetry install --no-root

    # configure mysql
    docker exec -it mysql /build/sbin/setup-mysql

commands =
    # run the test
    docker exec -w /build/tests -it redis-mysql {[testtemplate]python} -m RLTest --module /var/opt/redislabs/lib/modules/redisgears.so --module-args "Plugin /var/opt/redislabs/modules/rg/plugin/gears_python.so" -t ./testMySQLWriteBehind.py --env existing-env --existing-env-addr "127.0.0.1:6379"

[testenv:postgres]
allowlist_externals =
    docker
docker =
    postgres
    redis-postgres
commands_pre =
    # configure redis
    docker exec -it redis-postgres apt update -qqq
    docker exec -it redis-postgres apt install -qqy libpq-dev
    docker exec -it redis-postgres {[testtemplate]python} -m pip install poetry
    docker exec -it redis-postgres {[testtemplate]python} -m poetry config virtualenvs.create false
    docker exec -w /build -it redis-postgres {[testtemplate]python} -m poetry build
    docker exec -w /build -it redis-postgres {[testtemplate]python} -m poetry install --no-root

    # configure mysql
    docker exec -it postgres /build/sbin/setup-postgres

commands =
    # run the test
    docker exec -w /build/tests -it redis-postgres {[testtemplate]python} -m RLTest --module /var/opt/redislabs/lib/modules/redisgears.so --module-args "Plugin /var/opt/redislabs/modules/rg/plugin/gears_python.so" -t ./testPostgresWriteBehind.py --env existing-env --existing-env-addr "127.0.0.1:6379"

[testenv:linters]
commands =
  #flake8 --show-source
  vulture rgsync --min-confidence 80
  bandit rgsync/**
