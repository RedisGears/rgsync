[tox]
minversion=3.2.4
envlist=linters, integrations, docs

[main]
dbuser = admin
dbpass = adminpass
db=rgsync

[docker:toxmysql]
image = mysql:8
healthcheck_comd = nc -z 127.0.0.1 3306
healthcheck_timeout = 1
healthcheck_interval = 5
healthcheck_retries = 5
ports =
    3306:3306/tcp
environment =
    MYSQL_ROOT_PASSWORD=adminadmin
    MYSQL_USER={[main]dbuser}
    MYSQL_PASSWORD={[main]dbpasswd}
    MYSQL_DB={[main]db}

[docker:redisgears]
image = redislabs/redisgears:edge
healthcheck_comd = nc -z 127.0.0.1 6379
healthcheck_timeout = 1
healthcheck_interval = 2
healthcheck_retries = 5
ports =
    6379:6379/tcp

[docker:toxpgsql]
image = postgresq:13
healthcheck_comd = nc -z 127.0.0.1 5431
healthcheck_timeout = 1
healthcheck_interval = 2
healthcheck_retries = 5
ports =
    5431:5431/tcp
environment =
    POSTGRES_USER={[main]dbuser}
    POSTGRES_PASSWORD={[main]dbpasswd}
    POSTGRES_DB={[main]db}

[flake8]
max-complexity = 10
filename = ./redisplus/**
ignore = W292, E501
exclude = src/conftest.py
show-source = true

[testenv:linters]
skipsdist = true
commands =
    flake8
    black --check --diff src
    vulture src --min-confidence 80
    bandit -r src

# test mysql recipe
[testenv:mysql]
docker =
    toxmysql
    redisgears
pre_commands =
    docker stop toxmysql redisgears || exit 0  # just in case
    docker rm toxmysql redisgears || exit 0  # just in case
commands = pytest -m mysql

# run postgres tests
[testenv:postgres]
docker =
    toxpgsql
    redisgears
pre_commands =
    docker stop toxpgsql redisgears || exit 0  # just in case
    docker rm toxpgsql redisgears || exit 0  # just in case
commands = pytest -m postgres

[testenv:docs]
commands = make html
