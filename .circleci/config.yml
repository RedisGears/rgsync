version: 2.1

commands: 
  setup-executor:
    steps:
      - run:
          name: Setup executor
          command: |
            apt-get -qq update
            apt-get -q install -y git openssh-client curl ca-certificates make tar gzip
            bash <(curl -fsSL https://get.docker.com)
      - setup_remote_docker:
          docker_layer_caching: true

  setup-automation:
    steps:
      - run:
          name: Setup Automation
          command: |
            mkdir -p deps
            (cd deps; git clone https://github.com/RedisLabsModules/readies.git)
            ./deps/readies/bin/getpy3
            ./sbin/system-setup.py

  setup-gears:
    steps:
      - run:
          name: Setup Gears
          command: |
            cd ..
            wget http://redismodules.s3.amazonaws.com/redisgears/snapshots/redisgears.linux-bionic-x64.master.zip
            unzip redisgears.linux-bionic-x64.master.zip
            wget http://redismodules.s3.amazonaws.com/redisgears/snapshots/redisgears-dependencies.linux-bionic-x64.master.tgz
            mkdir -p /var/opt/redislabs/modules/rg
            cd /var/opt/redislabs/modules/rg
            tar -xvf /root/redisgears-dependencies.linux-bionic-x64.master.tgz

  platform-build-steps:
    parameters:
      platform:
        type: string
    steps:
      - setup-executor
      - checkout
      - setup-automation
      - run:
          name: Build for platform
          command: |
            cd build/reqpacks
            GEARS_VERSION=master OSNICK=<<parameters.platform>> ./build
      - persist_to_workspace:
          root: bin/artifacts
          paths:
            - '*.zip'

jobs:
  build_and_test:
    docker:
      - image: 'ubuntu:bionic'
    steps:
      - setup-executor
      - checkout
      - setup-automation
      - run:
          name: Setup Redis
          command: ./deps/readies/bin/getredis --version 6
      - setup-gears
      - run:
          name: Setup MySQL
          command: |
            service mysql start
            ./sbin/setup-mysql
      - run:
          name: Install rgsync
          command: /var/opt/redislabs/modules/rg/python3_99.99.99/bin/python3 setup.py install
      - run:
          name: Tests
          command: python3 -m RLTest --module ../redisgears.so

  platform-build:
    parameters:
      platform:
        type: string
    docker:
      - image: 'debian:buster'
    steps:
      - platform-build-steps:
          platform: <<parameters.platform>>
 
  deploy-artifacts:
    docker:
      - image: 'cimg/base:2020.01'
    steps:
      - attach_workspace:
          at: bin/artifacts
      - run:
          name: Setup
          command: sudo apt-get update && sudo apt-get install -y awscli
      - run:
          name: Deploy Releases to S3
          command: |
            for f in bin/artifacts/*.zip; do
              aws s3 cp $f s3://redismodules/rgsync/ --acl public-read
            done

platform-builds-requires: &platform-builds-requires
  requires:
    - build-centos7
    - build-bionic
    - build-xenial

platform-builds-flow-defs: &platform-builds-flow-defs
#  requires:
#    - build_and_test
  filters:
    branches:
      only: /.*/
    tags:
      only: /.*/
#    branches:
#      only:
#        - master
#    tags:
#      only: /^v[0-9].*/

workflows:
  version: 2
  commit:
    jobs:
#      - build_and_test
      - platform-build:
          name: build-bionic
          platform: bionic
          <<: *platform-builds-flow-defs
      - platform-build:
          name: build-centos7
          platform: centos7
          <<: *platform-builds-flow-defs
      - platform-build:
          name: build-xenial
          platform: xenial
          <<: *platform-builds-flow-defs
      - deploy-artifacts:
          <<: *platform-builds-requires
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
#            branches:
#              only: master
#            tags:
#              only: /^v[0-9].*/

#  nightly:
#    triggers:
#      - schedule:
#          cron: "0 0 * * *"
#          filters:
#            branches:
#              only:
#                - master
#    jobs:
#      - build_and_test
