version: 2.1

commands:
  setup-executor:
    steps:
      - run:
          name: Setup executor
          command: |
            apt-get -qq update
            apt-get -q install -y git openssh-client curl ca-certificates make tar gzip
            bash <(curl -fsSL https://get.docker.com)
      - setup_remote_docker:
          docker_layer_caching: true

  setup-automation:
    steps:
      - run:
          name: Setup automation
          command: |
            (mkdir -p deps; cd deps; git clone https://github.com/RedisLabsModules/readies.git)
            ./deps/readies/bin/getpy3
            ./sbin/system-setup.py

  platform-build-steps:
    parameters:
      platform:
        type: string
    steps:
      - setup-executor
      - checkout
      - setup-automation
      - run:
          name: Build for platform
          command: |
            OSNICK=<<parameters.platform>> ./build/reqpacks/build
      - persist_to_workspace:
          root: bin/artifacts
          paths:
            - '*.zip'

jobs:
  build-and-test:
    docker:
      - image: 'ubuntu:bionic'
    steps:
      - setup-executor
      - checkout
      - setup-automation
      - run:
          name: Install Redis
          command: ./deps/readies/bin/getredis --version 6
      - run:
          name: Setup MySQL
          command: |
            service mysql start
            ./sbin/setup-mysql
      - run:
          name: Install Gears and rgsync
          command: |
            ./sbin/setup-gears
            /var/opt/redislabs/modules/rg/python3_99.99.99/bin/python3 setup.py install
      - run:
          name: Tests
          command: |
            python3 -m RLTest --module /var/opt/redislabs/modules/rg/redisgears.so --module-args "Plugin /var/opt/redislabs/modules/rg/plugin/gears_python.so" -t tests/testMySQLWriteBehind.py

  platform-build:
    parameters:
      platform:
        type: string
    docker:
      - image: 'debian:buster'
    steps:
      - platform-build-steps:
          platform: <<parameters.platform>>

  deploy-artifacts:
    docker:
      - image: 'cimg/base:2021.04'
    steps:
      - checkout
      - attach_workspace:
          at: bin/artifacts
      - run:
          name: Setup
          command: sudo apt-get update && sudo apt-get install -y awscli
      - run:
          name: Deploy artifacts to S3
          command: ./sbin/deploy-artifacts


on-any-branch: &on-any-branch
  filters:
    branches:
      only: /.*/
    tags:
      only: /.*/

never: &never
  filters:
    branches:
      ignore: /.*/
    tags:
      ignore: /.*/

on-integ-branch: &on-integ-branch
  filters:
    branches:
      only:
        - master
        - /^\d+\.\d+.*$/
        - /^feature-.*$/
    tags:
      ignore: /.*/

not-on-integ-branch: &not-on-integ-branch
  filters:
    branches:
      ignore:
        - master
        - /^\d+\.\d+.*$/
        - /^feature-.*$/
    tags:
      ignore: /.*/

on-integ-and-version-tags: &on-integ-and-version-tags
  filters:
    branches:
      only:
        - master
        - /^\d+\.\d+.*$/
        - /^feature-.*$/
    tags:
      only: /^v[0-9].*/


workflows:
  version: 2
  commit:
    jobs:
      - build-and-test:
          <<: *not-on-integ-branch
      - platform-build:
          matrix:
            parameters:
              platform: [bionic, xenial, centos7]
          context: common
          <<: *on-integ-and-version-tags
      - deploy-artifacts:
          context: common
          requires:
            - platform-build
          <<: *on-integ-and-version-tags

  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build-and-test
