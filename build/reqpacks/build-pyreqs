#!/bin/bash

set -xe

HERE="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"
ROOT=$(realpath $HERE/../..)

REDIS_HOST=${REDIS_HOST:-localhost}

GEARS_VERSION=${GEARS_VERSION:-latest}
OSNICK=${OSNICK:-bionic}
ARCH=${ARCH:-x64}

cd $ROOT
docker build -t rgsync-reqpacks:${GEARS_VERSION}-${ARCH}-${OSNICK} -f build/reqpacks/Dockerfile --build-arg OSNICK=${OSNICK} --build-arg ARCH=${ARCH} .
cid=$(mktemp /tmp/gears.cid.XXXXXX)
rm -f $cid
docker run -d --cidfile $cid -p 6379:6379 rgsync-reqpacks:${GEARS_VERSION}-${ARCH}-${OSNICK}

while [[ $($ROOT/deps/readies/bin/redis-cmd -- ping) != PONG ]]; do
	sleep 1
done

if [[ `$ROOT/deps/readies/bin/platform --redhat?; echo $?` == 0 ]]; then
	export LC_ALL=en_US.UTF-8
	export LANG=en_US.UTF-8
else
	export LC_ALL=C.UTF-8
	export LANG=C.UTF-8
fi

if [[ `$ROOT/deps/readies/bin/istagfresh > /tmp/rgver 2> /dev/null; echo $?` == 0 ]]; then
	BRSPEC="$(cat /tmp/rgver)"
	RGSYNC_VERSION="@$(cat /tmp/rgver | sed 's/^v\(.*\)/\1/')"
else
	BRSPEC=""
	RGSYNC_VERSION=99.99.99
fi

$ROOT/deps/readies/bin/xtx -e BRSPEC $HERE/requirements.txt | sed -e '/^[ \t]*#/d' > /tmp/requirements.txt

touch $HERE/none.py
python3 -m gears_cli run --host $REDIS_HOST --requirements /tmp/requirements.txt $HERE/none.py

REQS_PATH=$ROOT/bin/artifacts/reqs
mkdir -p $REQS_PATH
for req in $REQS; do
	python3 -m gears_cli export-requirement --host $REDIS_HOST --save-directory $REQS_PATH $req
done

cd $REQS_PATH
tri=`$ROOT/deps/readies/bin/platform -t`
zip $ROOT/bin/artifacts/rgsync-${RGSYNC_VERSION}.linux-${OSNICK}-${ARCH}.zip *.zip

docker stop `cat $cid`
rm -f $cid
